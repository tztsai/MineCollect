üõ∞Ô∏è Universal URI Scheme for MineCollect

Each source of data‚Äîwhether web, app, or local‚Äîshould resolve to a consistent and parseable URI format. The scheme should support the following goals:
	‚Ä¢	It's an extension of canonical URL, so all sources accessible by browser should have a URI the same as its HTTPS URL
	‚Ä¢	Uniformity across platforms and types
	‚Ä¢	Extensibility for custom or exotic sources
	‚Ä¢	Granularity (e.g., down to highlight or timestamp)
	‚Ä¢	Resolvability (for re-fetch or verification)
	‚Ä¢	Indexing in the database via a source_uri field

‚∏ª

üî§ URI Grammar

[SCHEME]://[AUTHORITY]/[PATH]?[QUERY]#[FRAGMENT]

All URIs must be unique per content unit. Here‚Äôs the breakdown of key schemes:

‚∏ª

üîí Local Device Schemes

Scheme	Example	Purpose
device	device://MacBook-Pro/Documents/Notes/2025-01-01.md	Files on specific machines
screenshot	screenshot://iPhone14Pro/2025-06-08_11-23-48.png	Mobile or desktop screenshots
zotero	zotero://collection/AI-Papers/2023-paper-title.pdf	Zotero file reference
clip	clip://macbook/session/clipboard-uuid	Clipboard captures
ocr	ocr://macbook/scan-uuid/line-34	OCR-derived source lines


‚∏ª

üåê Web Schemes

Scheme	Example	Purpose
https	https://twitter.com/user/status/1234567890	Direct canonical URL
webcal	webcal://calendar.google.com/user/calendar.ics	Calendar feeds
rss	rss://substack.com/feed/ai-news	RSS subscriptions
mid	mid://gmail/2025-06-08T10:00:00Z-threadID123	Email messages
chat	chat://chatgpt/session/abc123/turn-12	Chat logs with bots


‚∏ª

üì± App Schemes (Installed Apps or Mobile APIs)

Scheme	Example	Purpose
app	app://notion/Projects/AI-Roadmap	Notes or items inside apps
wechat	wechat://collections/bookmark-uuid	WeChat items
kindle	kindle://book/ASIN/highlight-uuid	Kindle highlight
spotify	spotify://episode/abc123	Podcast/music reference
youtube	youtube://watch?v=xyz123&t=90	Video + timestamp
bilibili	bilibili://collection/playlist-id/video-id	Localized source ref


‚∏ª

üì¶ MineCollect Internal URIs

Scheme	Example	Purpose
mine	mine://snapshots/twitter/2025-06-08-item1234	Internal URI for ingested item
hash	hash://sha256/abcdef...	Canonical hash-based fallback ref
job	job://importer/reddit/2025-06-08-batch1	Importer job ref
db	db://items/item-uuid	DB primary key (used internally)


‚∏ª

‚ú≥Ô∏è Query & Fragment Extensions

Use the query/fragment section to express:
	‚Ä¢	Highlight ranges: ?hl=par12-13
	‚Ä¢	Timestamps: #t=01:23
	‚Ä¢	Section headings: #heading=Introduction
	‚Ä¢	Tags or anchors: ?tag=ai&tag=philosophy

‚∏ª

üîó Example Applications

1. A YouTube highlight:

youtube://watch?v=abc123&t=164

Linked with:
	‚Ä¢	Ingest timestamp
	‚Ä¢	Title and transcript fragment
	‚Ä¢	Screenshot from frame

2. Kindle highlight:

kindle://book/B08XYZ/highlight-34

With mapping to:
	‚Ä¢	Readings/Books/Title
	‚Ä¢	mine://snapshots/kindle/highlight-uuid

3. Reddit saved comment:

https://reddit.com/r/AskHistorians/comments/abc123/comment/xyz456

And internal mirror:

mine://snapshots/reddit/2025-06-08-xyz456


‚∏ª

üìò Database Integration

In Items table:

source_uri: string // stores any of the above
web_url: string | null // if available (https)
hash: string // sha256 of normalized content


‚∏ª

üß† Advantages
	‚Ä¢	Traceability: Always link back to origin (for re-verification or re-import)
	‚Ä¢	Deduplication: Use hash + URI to prevent redundancies
	‚Ä¢	Re-import Automation: Triggers based on URI patterns (e.g., all kindle:// items weekly)
	‚Ä¢	Cross-linking: Easy semantic backlinks via URI mapping